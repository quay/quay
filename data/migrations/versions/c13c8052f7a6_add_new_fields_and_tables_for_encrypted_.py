"""
Add new fields and tables for encrypted tokens.

Revision ID: c13c8052f7a6
Revises: 5248ddf35167
Create Date: 2019-08-19 15:59:36.269155
"""

# revision identifiers, used by Alembic.
revision = "c13c8052f7a6"
down_revision = "5248ddf35167"

import sqlalchemy as sa


def upgrade(op, tables, tester):
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "robotaccounttoken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("robot_account_id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("fully_migrated", sa.Boolean(), nullable=False, server_default="0"),
        sa.ForeignKeyConstraint(
            ["robot_account_id"],
            ["user.id"],
            name=op.f("fk_robotaccounttoken_robot_account_id_user"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_robotaccounttoken")),
    )
    op.create_index(
        "robotaccounttoken_robot_account_id", "robotaccounttoken", ["robot_account_id"], unique=True
    )

    op.add_column("accesstoken", sa.Column("token_code", sa.String(length=255), nullable=True))
    op.add_column("accesstoken", sa.Column("token_name", sa.String(length=255), nullable=True))
    op.create_index("accesstoken_token_name", "accesstoken", ["token_name"], unique=True)

    op.add_column(
        "appspecificauthtoken", sa.Column("token_name", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "appspecificauthtoken", sa.Column("token_secret", sa.String(length=255), nullable=True)
    )
    op.create_index(
        "appspecificauthtoken_token_name", "appspecificauthtoken", ["token_name"], unique=True
    )

    op.add_column(
        "emailconfirmation", sa.Column("verification_code", sa.String(length=255), nullable=True)
    )

    op.add_column("oauthaccesstoken", sa.Column("token_code", sa.String(length=255), nullable=True))
    op.add_column("oauthaccesstoken", sa.Column("token_name", sa.String(length=255), nullable=True))
    op.create_index("oauthaccesstoken_token_name", "oauthaccesstoken", ["token_name"], unique=True)

    op.add_column(
        "oauthapplication", sa.Column("secure_client_secret", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "oauthapplication",
        sa.Column("fully_migrated", sa.Boolean(), server_default="0", nullable=False),
    )

    op.add_column(
        "oauthauthorizationcode",
        sa.Column("code_credential", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "oauthauthorizationcode", sa.Column("code_name", sa.String(length=255), nullable=True)
    )
    op.create_index(
        "oauthauthorizationcode_code_name", "oauthauthorizationcode", ["code_name"], unique=True
    )
    op.drop_index("oauthauthorizationcode_code", table_name="oauthauthorizationcode")
    op.create_index("oauthauthorizationcode_code", "oauthauthorizationcode", ["code"], unique=True)

    op.add_column(
        "repositorybuildtrigger",
        sa.Column("secure_auth_token", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "repositorybuildtrigger", sa.Column("secure_private_key", sa.Text(), nullable=True)
    )
    op.add_column(
        "repositorybuildtrigger",
        sa.Column("fully_migrated", sa.Boolean(), server_default="0", nullable=False),
    )
    # ### end Alembic commands ###

    # ### population of test data ### #
    tester.populate_table(
        "robotaccounttoken",
        [
            ("robot_account_id", tester.TestDataType.Foreign("user")),
            ("token", tester.TestDataType.Token),
            ("fully_migrated", tester.TestDataType.Boolean),
        ],
    )

    tester.populate_column("accesstoken", "code", tester.TestDataType.Token)

    tester.populate_column("appspecificauthtoken", "token_code", tester.TestDataType.Token)

    tester.populate_column("emailconfirmation", "verification_code", tester.TestDataType.Token)

    tester.populate_column("oauthaccesstoken", "token_code", tester.TestDataType.Token)
    # ### end population of test data ### #


def downgrade(op, tables, tester):
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("repositorybuildtrigger") as batch_op:
        batch_op.drop_column("secure_private_key")
        batch_op.drop_column("secure_auth_token")

    op.drop_index("oauthauthorizationcode_code", table_name="oauthauthorizationcode")
    op.create_index("oauthauthorizationcode_code", "oauthauthorizationcode", ["code"], unique=False)
    op.drop_index("oauthauthorizationcode_code_name", table_name="oauthauthorizationcode")
    with op.batch_alter_table("oauthauthorizationcode") as batch_op:
        batch_op.drop_column("code_name")
        batch_op.drop_column("code_credential")

    with op.batch_alter_table("oauthapplication") as batch_op:
        batch_op.drop_column("secure_client_secret")

    op.drop_index("oauthaccesstoken_token_name", table_name="oauthaccesstoken")
    with op.batch_alter_table("oauthaccesstoken") as batch_op:
        batch_op.drop_column("token_name")
        batch_op.drop_column("token_code")

    with op.batch_alter_table("emailconfirmation") as batch_op:
        batch_op.drop_column("verification_code")

    op.drop_index("appspecificauthtoken_token_name", table_name="appspecificauthtoken")
    with op.batch_alter_table("appspecificauthtoken") as batch_op:
        batch_op.drop_column("token_secret")
        batch_op.drop_column("token_name")

    op.drop_index("accesstoken_token_name", table_name="accesstoken")
    with op.batch_alter_table("accesstoken") as batch_op:
        batch_op.drop_column("token_name")
        batch_op.drop_column("token_code")

    op.drop_table("robotaccounttoken")
    # ### end Alembic commands ###
