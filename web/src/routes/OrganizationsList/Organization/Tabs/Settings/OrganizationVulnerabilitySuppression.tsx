import {AxiosError} from 'axios';
import {AlertVariant} from 'src/atoms/AlertState';
import VulnerabilitySuppressionInput from 'src/components/VulnerabilitySuppressionInput';
import {useAlerts} from 'src/hooks/UseAlerts';
import {useOrganizationVulnerabilitySuppressions} from 'src/hooks/UseVulnerabilitySuppressions';
import {addDisplayError} from 'src/resources/ErrorHandling';
import {IOrganization} from 'src/resources/OrganizationResource';

export default function OrganizationVulnerabilitySuppression(
  props: OrganizationVulnerabilitySuppressionProps,
) {
  const {addAlert} = useAlerts();

  const {
    setSuppressions: updateVulnerabilitySuppressions,
    loading: loadingSetSuppressions,
  } = useOrganizationVulnerabilitySuppressions({
    org: props.organization.name,
    onSuccess: () => {
      addAlert({
        variant: AlertVariant.Success,
        title: 'Successfully updated vulnerability suppressions',
      });
    },
    onError: (error: AxiosError) => {
      addAlert({
        variant: AlertVariant.Failure,
        title: addDisplayError(
          'Unable to update vulnerability suppressions',
          error,
        ),
      });
    },
  });

  return (
    <VulnerabilitySuppressionInput
      suppressedVulnerabilities={
        props.organization.suppressed_vulnerabilities
          ? props.organization.suppressed_vulnerabilities
          : []
      }
      mutator={updateVulnerabilitySuppressions}
      loading={loadingSetSuppressions}
      helperText='Specify vulnerability identifiers to suppress for any image in this repository. For example "CVE-2021-44228". They will match any vulnerability identifier that contains the specified string. You can also paste space or comma separated values. Any suppression defined here will be applied to all images in in all repositories in this organization.'
    />
  );
}

interface OrganizationVulnerabilitySuppressionProps {
  organization: IOrganization;
  loading: boolean;
}
