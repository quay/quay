from .ttl import TTLCache
from collections import namedtuple
from typing import Any

_CacheInfo = namedtuple('CacheInfo', ['hits', 'misses', 'maxsize', 'currsize'])

class _UnboundCache(dict):
    maxsize: Any = ...
    @property
    def currsize(self): ...

class _UnboundTTLCache(TTLCache):
    def __init__(self, ttl: Any, timer: Any) -> None: ...
    @property
    def maxsize(self) -> None: ...

def lfu_cache(maxsize: int = ..., typed: bool = ...): ...
def lru_cache(maxsize: int = ..., typed: bool = ...): ...
def rr_cache(maxsize: int = ..., choice: Any = ..., typed: bool = ...): ...
def ttl_cache(maxsize: int = ..., ttl: int = ..., timer: Any = ..., typed: bool = ...): ...
